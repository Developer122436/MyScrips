1
00:00:00,001 --> 00:00:02,007
- [Instructor] When creating an Excel document with Python,

2
00:00:02,007 --> 00:00:05,007
it's always a good idea to add user functionality,

3
00:00:05,007 --> 00:00:07,003
or just make the document look

4
00:00:07,003 --> 00:00:09,009
more pleasing to the eye and professional.

5
00:00:09,009 --> 00:00:13,005
In this video, I'll be going over openpyxl's features

6
00:00:13,005 --> 00:00:16,000
to create a simple table, which is intractable

7
00:00:16,000 --> 00:00:19,001
by the reader, as well as importing images.

8
00:00:19,001 --> 00:00:21,003
One note before we get started is that,

9
00:00:21,003 --> 00:00:25,004
image manipulation is not done solely through openpyxl,

10
00:00:25,004 --> 00:00:27,002
and you may need to install a library

11
00:00:27,002 --> 00:00:29,007
called Pillow via your pip installer.

12
00:00:29,007 --> 00:00:31,009
Jumping in, the first thing we need to do

13
00:00:31,009 --> 00:00:34,000
is import from openpyxl,

14
00:00:34,000 --> 00:00:49,001
in our case, we need some table and image functions.

15
00:00:49,001 --> 00:00:51,002
The next basic setup is to create

16
00:00:51,002 --> 00:00:52,009
our workbook and worksheet.

17
00:00:52,009 --> 00:00:54,007
Because I'll be loading in an Excel sheet

18
00:00:54,007 --> 00:00:57,005
that we already created, we also need to import

19
00:00:57,005 --> 00:01:02,002
our load_workbook function.

20
00:01:02,002 --> 00:01:08,009
Now, we can continue on to loading in our workbook.

21
00:01:08,009 --> 00:01:14,005
We also need to create our active worksheet.

22
00:01:14,005 --> 00:01:16,000
Now let's open our Excel document

23
00:01:16,000 --> 00:01:19,008
to see how our data is formatted.

24
00:01:19,008 --> 00:01:24,004
We can see that our data is located from A1 to B5,

25
00:01:24,004 --> 00:01:30,000
so let's keep this in mind as we create our table object.

26
00:01:30,000 --> 00:01:32,008
We'll set up a variable called tab and set it equal

27
00:01:32,008 --> 00:01:41,008
to a table object with the display name of Table1.

28
00:01:41,008 --> 00:01:43,007
Next, we have to reference our data,

29
00:01:43,007 --> 00:01:49,000
and we know our data is stored from A1 to B5.

30
00:01:49,000 --> 00:01:50,008
Now that the table knows what it's called

31
00:01:50,008 --> 00:01:52,003
and where to find the data,

32
00:01:52,003 --> 00:01:54,004
it needs to know how to format itself.

33
00:01:54,004 --> 00:01:57,006
From here, we use the table style information,

34
00:01:57,006 --> 00:02:00,005
so let's create a style variable and set it equal

35
00:02:00,005 --> 00:02:04,002
to the TableStyleInfo object.

36
00:02:04,002 --> 00:02:06,006
Now we need to specify what's inside of the style,

37
00:02:06,006 --> 00:02:12,007
we'll set the name to TableStyleMedium9.

38
00:02:12,007 --> 00:02:16,001
We also need to tell it to show the first and last columns,

39
00:02:16,001 --> 00:02:18,004
and whether to have row and column stripes.

40
00:02:18,004 --> 00:02:20,003
Let's set the column values to False,

41
00:02:20,003 --> 00:02:43,004
and then stripe values to True.

42
00:02:43,004 --> 00:02:45,005
Once our style is done, we have all we need

43
00:02:45,005 --> 00:02:48,002
to create a table, so we'll just set

44
00:02:48,002 --> 00:02:57,003
the TableStyleInfo property to the style we just made.

45
00:02:57,003 --> 00:02:58,009
For the last step, we need to

46
00:02:58,009 --> 00:03:04,000
add the table to the worksheet.

47
00:03:04,000 --> 00:03:08,004
Then we can save this as separate Excel document.

48
00:03:08,004 --> 00:03:10,001
We'll just call it table.

49
00:03:10,001 --> 00:03:20,006
So let's run this and head over to our working directory.

50
00:03:20,006 --> 00:03:23,006
Now we can see that our data is formatted into a table,

51
00:03:23,006 --> 00:03:25,008
the rows and columns are shaded and striped,

52
00:03:25,008 --> 00:03:28,004
and the two header columns have this dropdown box

53
00:03:28,004 --> 00:03:31,006
to make it reader intractable.

54
00:03:31,006 --> 00:03:33,009
This is extremely helpful when creating tables

55
00:03:33,009 --> 00:03:36,005
of large amounts of data because as you can see,

56
00:03:36,005 --> 00:03:39,005
you can filter, sort, and select different values

57
00:03:39,005 --> 00:03:40,005
within the table.

58
00:03:40,005 --> 00:03:42,008
So, let's head back to our Python document

59
00:03:42,008 --> 00:03:45,004
and talk about inserting images.

60
00:03:45,004 --> 00:03:47,007
Again, you'll need the Pillow library

61
00:03:47,007 --> 00:03:50,004
to insert images into your Excel document,

62
00:03:50,004 --> 00:03:52,007
but it's a very handy library to have

63
00:03:52,007 --> 00:03:56,003
because image manipulation can be done in just a few lines.

64
00:03:56,003 --> 00:03:58,005
First, we want to have our image file

65
00:03:58,005 --> 00:03:59,009
in our working directory,

66
00:03:59,009 --> 00:04:02,007
if we don't, then we have to specify a path.

67
00:04:02,007 --> 00:04:04,009
Next, we create an image variable,

68
00:04:04,009 --> 00:04:12,004
we'll just call it img and set it equal to the Image object.

69
00:04:12,004 --> 00:04:17,003
Now all we have to do is specify the image name.

70
00:04:17,003 --> 00:04:22,005
Once that's done, we can simply add it to the worksheet.

71
00:04:22,005 --> 00:04:24,006
Remember the cell we access is where

72
00:04:24,006 --> 00:04:27,000
the top left of the image will be aligned,

73
00:04:27,000 --> 00:04:28,009
so we'll set the picture so that it's

74
00:04:28,009 --> 00:04:32,003
right next to our data, in cell C1.

75
00:04:32,003 --> 00:04:34,004
Once the worksheet contains our image object,

76
00:04:34,004 --> 00:04:39,004
all we need to do is save the workbook.

77
00:04:39,004 --> 00:04:40,005
Pretty simple right?

78
00:04:40,005 --> 00:04:49,004
Let's run this and go check it out.

79
00:04:49,004 --> 00:04:51,002
Now we can see that our picture's saved

80
00:04:51,002 --> 00:04:53,008
right next to our table, but let's say we were putting this

81
00:04:53,008 --> 00:04:56,004
as a logo somewhere, and it was way too big.

82
00:04:56,004 --> 00:04:58,006
The image object allows us to access

83
00:04:58,006 --> 00:05:01,003
some of its properties, including width and height.

84
00:05:01,003 --> 00:05:03,006
So, going back to our Python script,

85
00:05:03,006 --> 00:05:06,002
before we add it to our worksheet, let's edit it,

86
00:05:06,002 --> 00:05:08,008
all we need to do is set the width and height,

87
00:05:08,008 --> 00:05:10,008
for example, if I wanted the image

88
00:05:10,008 --> 00:05:12,009
to be a quarter of its current size,

89
00:05:12,009 --> 00:05:16,004
then all we have to do is multiply its dimensions by 0.25,

90
00:05:16,004 --> 00:05:17,008
so let's do that real quick,

91
00:05:17,008 --> 00:05:29,004
utilizing the image's properties.

92
00:05:29,004 --> 00:05:32,004
Once this is done, let's change our save file name

93
00:05:32,004 --> 00:05:36,008
so that it doesn't overwrite our current image.

94
00:05:36,008 --> 00:05:38,007
Now we can run this through terminal

95
00:05:38,007 --> 00:05:44,009
and visit our working directory.

96
00:05:44,009 --> 00:05:47,002
Our image is exactly a quarter of the size

97
00:05:47,002 --> 00:05:48,008
of what it was previously,

98
00:05:48,008 --> 00:05:51,002
now we can easily create better looking

99
00:05:51,002 --> 00:05:52,005
and usable spreadsheets.

